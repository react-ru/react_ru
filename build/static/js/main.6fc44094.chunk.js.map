{"version":3,"sources":["redux/createStore.js","components/TopBar.jsx","components/Logo.jsx","constants/endpointBase.js","constants/chatId.js","components/MembersCount.jsx","components/HeroUnit.jsx","redux/reducers/modal.js","HOCs/withModal.js","components/ChatRules.jsx","components/Moderator.jsx","components/Moderation.jsx","components/ChatMessage.jsx","components/ChatPreview.jsx","components/GoToChat.jsx","pages/Main.jsx","forms/AskQuestion.jsx","constants/recaptcha.js","modals/AskQuestion.jsx","forms/Rehabilitation.jsx","modals/Rehabilitation.jsx","redux/reducers/form.js","index.js","components/App.jsx"],"names":["reducer","TopBar","Logo","react_default","a","createElement","className","src","endpointBase","chatId","LoadMembersCount","useFetch","concat","members_count","MembersCount","title","react","fallback","MembersCount_LoadMembersCount","HeroUnit","Container","Logo_Logo","MembersCount_MembersCount","toggle","createActions","TOGGLE","name","handleActions","Object","defineProperty","state","_ref","payload","objectSpread","open","get","withModal","WrappedComponent","stateMapper","createStructuredSelector","isOpen","connect","dispatch","bindActionCreators","RehabiltiationButton","Button","onClick","ChatRules","Fragment","role","aria-label","Moderator","avatarSrc","Card","tag","href","CardImg","top","width","CardBody","Moderation","ListGroup","ListGroupItem","Row","Col","xs","md","Moderator_Moderator","style","marginTop","marginBottom","ChatMessage","id","from","text","date","Media","body","distanceInWordsToNow","heading","first_name","last_name","Messages","messages","map","reverse","props","ChatMessage_ChatMessage","assign","key","_id","WriteIntoChatButton","ChatPreview","ChatPreview_Messages","GoToChat","color","size","ym","MainSection","_ref$show","show","children","Main","HeroUnit_HeroUnit","offset","Main_MainSection","ChatRules_ChatRules","Moderation_Moderation","ChatPreview_ChatPreview","GoToChat_GoToChat","AskQuestion","reduxForm","form","handleSubmit","onRecaptchaComplete","onRecaptchaExpire","disabled","Form","onSubmit","FormGroup","Input","Field","component","placeholder","rows","lib_es","sitekey","onChange","onExpire","AskQuestionSuccess","success","Alert","AskQuestionError","_ref2","error","stack","SendButton","_ref3","JoinButton","_ref4","_ref5","_useState","useState","_useState2","slicedToArray","pending","setPending","_useState3","_useState4","setError","_useState5","_useState6","setSuccess","_useState7","_useState8","reCaptchaSuccess","setReCaptchaSuccess","_ref6","asyncToGenerator","regenerator_default","mark","_callee","values","_ref7","data","wrap","_context","prev","next","axios","post","chat_id","sent","t0","finish","stop","this","_x","apply","arguments","Modal","ModalHeader","ModalBody","AskQuestion_AskQuestionSuccess","AskQuestion_AskQuestionError","ModalFooter","AskQuestion_JoinButton","AskQuestion_SendButton","Rehabilitation","htmlFor","InputGroup","InputGroupAddon","addonType","type","RehabilitationError","RehabilitationSuccess","email","CloseButton","togglePending","Rehabilitation_RehabilitationError","Rehabilitation_RehabilitationSuccess","Rehabilitation_CloseButton","Rehabilitation_SendButton","formReducer","rootElement","document","getElementById","store","combineReducers","modal","baseCreateStore","composeWithDevTools","app","es","BrowserRouter","Switch","Route","exact","path","AskQuestion_AskQuestion","Rehabilitation_Rehabilitation","ReactDOM","render"],"mappings":"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","file":"static/js/main.6fc44094.chunk.js","sourcesContent":["import { createStore as baseCreateStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport modal from \"./reducers/modal\";\nimport form from \"./reducers/form\";\n\nexport const createStore = () => {\n  const reducer = combineReducers({\n    modal,\n    form\n  });\n  return baseCreateStore(reducer, composeWithDevTools());\n};\n","export const TopBar = () => {\n  return null;\n};\n","import React from \"react\";\n\nimport \"./Logo.css\";\n\nexport const Logo = () => {\n  return (\n    <div className=\"Logo\">\n      <img className=\"Logo__image\" src=\"/img/icon.png\" />\n    </div>\n  );\n};\n","export const endpointBase = \"https://bot.react-chat.ru\";\n","export const chatId = -1001306230328;\n","import React, { Suspense } from \"react\";\nimport { endpointBase } from \"../constants/endpointBase\";\nimport { chatId } from \"../constants/chatId\";\nimport useFetch from \"fetch-suspense\";\n\nimport \"./MembersCount.css\";\n\nconst LoadMembersCount = () => {\n  const { members_count } = useFetch(\n    `${endpointBase}/api/members_count?chat_id=${chatId}`\n  );\n  return members_count;\n  // return 575;\n};\n\nexport const MembersCount = () => {\n  return (\n    <div className=\"MembersCount\" title=\"Количество участников в группе\">\n      <Suspense fallback={\"...\"}>\n        <LoadMembersCount />\n      </Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Logo } from \"./Logo\";\nimport { MembersCount } from \"./MembersCount\";\n\nimport \"./HeroUnit.css\";\n\nexport const HeroUnit = () => {\n  return (\n    <div className=\"HeroUnit\">\n      <Container>\n        <div className=\"HeroUnit__first_line\">\n          <Logo />\n          <MembersCount />\n          <h1 className=\"HeroUnit__title\">React_Ru</h1>\n        </div>\n        <div className=\"HeroUnit__second_line\">\n          <p>Русскоязычное сообщество React разработчиков в telegram</p>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import { createActions, handleActions } from \"redux-actions\";\nimport { get } from \"lodash\";\n\nconst defaultState = {};\n\nexport const { toggle } = createActions({\n  TOGGLE: name => {\n    return {\n      name\n    };\n  }\n});\n\nexport default handleActions(\n  {\n    [toggle]: (state, { payload: { name } }) => {\n      return {\n        ...state,\n        [name]: {\n          open: !get(state, [name, \"open\"], false)\n        }\n      };\n    }\n  },\n  defaultState\n);\n","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { get } from \"lodash\";\nimport { bindActionCreators } from \"redux\";\nimport { toggle } from \"../redux/reducers/modal\";\n\nexport const withModal = name => WrappedComponent => {\n  const stateMapper = createStructuredSelector({\n    isOpen: state => {\n      return get(state, [\"modal\", name, \"open\"], false);\n    }\n  });\n\n  const dispatchMapper = dispatch =>\n    bindActionCreators(\n      {\n        toggle: () => toggle(name)\n      },\n      dispatch\n    );\n\n  return connect(\n    stateMapper,\n    dispatchMapper\n  )(WrappedComponent);\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { withModal } from \"../HOCs/withModal\";\n\nconst RehabiltiationButton = withModal(\"rehabiltiation\")(({ toggle }) => {\n  return <Button onClick={toggle}>Что делать если нарушил правила</Button>;\n});\n\nexport const ChatRules = () => {\n  return (\n    <>\n      <h1>\n        <span role=\"img\" aria-label=\"книга\">\n          📖\n        </span>{\" \"}\n        Правила сообщества\n      </h1>\n      <p>\n        Чтобы сообщество было открытым и гостепреимным, мы, его участники и\n        администрация, обязуемся сделать общение в группе свободным от\n        преследований и оскорблений, вне зависимости от возраста, размера тела,\n        инвалидности, этнической принадлежности, гендерной идентичности,\n        самовыражения, уровня опыта, вероисповедания, гендерной идентичности и\n        сексуальных предпочтений.\n      </p>\n      <p>\n        Мы стараемся полно и по существу ответить на любую просьбу, адресованный\n        сообществу.\n      </p>\n      <p>\n        Мы не используем в общении прямых и косвенных оскорблений, обсценную\n        лексику (мат), и уважаем всех участников сообщества.\n      </p>\n      <p>\n        Также, мы не отзываемся уничижительно в отношении любых людей, явлений\n        или событий вне сообщества.\n      </p>\n      <p>Мы нацелены на сотрудничество и сближение взглядов.</p>\n      <p>Правила распространяются на администрацию и всех членов сообщества.</p>\n      <h2>\n        <span role=\"img\" aria-label=\"палец вверх\">\n          👍🏼\n        </span>{\" \"}\n        Ожидаемое поведение\n      </h2>\n      <ul>\n        <li>Задавайте вопросы и делитесь своим опытом.</li>\n        <li>Обсуждайте новости.</li>\n        <li>Приглашайте знакомых, коллег и сотрудников.</li>\n        <li>Если не согласны с чьим-то мнением, скажите об этом.</li>\n        <li>Если согласны, поддержите говорящего.</li>\n        <li>Не молчите, если знаете ответ на вопрос.</li>\n        <li>Спросите, если не понимаете.</li>\n      </ul>\n      <h2>\n        <span role=\"img\" aria-label=\"палец вниз\">\n          👎🏼\n        </span>{\" \"}\n        Нежелательное поведение\n      </h2>\n      <ul>\n        <li>Оскорбления, обсценная лексика.</li>\n        <li>Насмешки, унижающие достоинство шутки.</li>\n        <li>Угрозы безопасности членов сообщества.</li>\n        <li>Переход на личности.</li>\n        <li>Публикация материалов сексуального характера, сцен насилия.</li>\n        <li>\n          Обман, клевета, возбуждение ссор и раздоров, призывы к неблаговидным\n          действиям.\n        </li>\n        <li>Поддержка неприемлемого поведения.</li>\n      </ul>\n      <h2>\n        <span role=\"img\" aria-label=\"запрещено\">\n          🚫\n        </span>{\" \"}\n        Строго запрещено\n      </h2>\n      <ul>\n        <li>Нежелательная реклама, спам</li>\n        <li>Необоснованные ссылки на внешние ресурсы</li>\n        <li>Ссылки на другие сообщества</li>\n        <li>\n          Публикация вакансий, обсуждения зарплат, проектов, работодателей\n        </li>\n      </ul>\n      <RehabiltiationButton />\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardImg, CardBody, Button } from \"reactstrap\";\nimport { Avatar } from \"./Avatar\";\n\nexport const Moderator = ({ name, avatarSrc }) => {\n  return (\n    <Card tag=\"a\" href={`tg://resolve?domain=${name}`}>\n      <CardImg top width=\"100%\" src={avatarSrc} />\n      <CardBody>\n        <div className=\"text-center\">\n          <Button tag=\"a\" href={`tg://resolve?domain=${name}`}>\n            @{name}\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Button, ListGroup, ListGroupItem, Row, Col } from \"reactstrap\";\nimport { Moderator } from \"./Moderator\";\n\nexport const Moderation = () => {\n  return (\n    <>\n      <h1>\n        <span role=\"img\" aria-label=\"модерация\">\n          👮🏻\n        </span>\n        Модерация\n      </h1>\n      <ListGroup>\n        <ListGroupItem>\n          <Row>\n            <Col xs={6} md={4}>\n              <Moderator name=\"Ychebotaev\" avatarSrc=\"/img/ychebotaev.jpg\" />\n            </Col>\n            <Col xs={6} md={4}>\n              <Moderator name=\"KorolDmitry\" avatarSrc=\"/img/dmitry-korol.jpg\" />\n            </Col>\n            <Col xs={6} md={4}>\n              <Moderator name=\"inkognito1\" avatarSrc=\"/img/pavel.jpg\" />\n            </Col>\n          </Row>\n        </ListGroupItem>\n        <ListGroupItem>\n          <h3>\n            <span role=\"img\" aria-label=\"компьютер\">\n              👨‍💻\n            </span>{\" \"}\n            Сообщество нуждается в волонтерах-модераторах\n          </h3>\n          <p>\n            Пожалуйста, свяжитесь с{\" \"}\n            <a href=\"tg://resolve?domain=ychebotaev\">@ychebotaev</a> в telegram,\n            если вы:\n          </p>\n          <ul>\n            <li>\n              Имеете время, возможность и желание, чтобы заниматься\n              модераторской работой.\n            </li>\n            <li>\n              Интересуетесь и хотели бы в дальнейшем использовать react в\n              карьере.\n            </li>\n            <li>Понимаете и готовы соблюдать правила на этой странице.</li>\n          </ul>\n          <div\n            className=\"text-center\"\n            style={{ marginTop: \"1rem\", marginBottom: \"1rem\" }}\n          >\n            <Button tag=\"a\" href=\"tg://resolve?domain=ychebotaev\">\n              Попроситься в модераторы\n            </Button>\n          </div>\n        </ListGroupItem>\n      </ListGroup>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Media } from \"reactstrap\";\nimport { distanceInWordsToNow } from \"date-fns\";\nimport \"./ChatMessage.css\";\n\nexport const ChatMessage = ({ id, from, text, date }) => {\n  return (\n    <Media className=\"ChatMessage\" id=\"id\">\n      <Media className=\"ChatMessage__body\" body>\n        <div className=\"ChatMessage__time\">\n          {distanceInWordsToNow(date * 1000)}\n        </div>\n        <Media className=\"ChatMessage__heading\" heading>\n          {from.first_name} {from.last_name}\n        </Media>\n        {text}\n      </Media>\n    </Media>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport { Card, CardBody, Button } from \"reactstrap\";\nimport { ChatMessage } from \"./ChatMessage\";\nimport { map } from \"lodash\";\nimport { endpointBase } from \"../constants/endpointBase\";\nimport { chatId } from \"../constants/chatId\";\nimport useFetch from \"fetch-suspense\";\nimport { withModal } from \"../HOCs/withModal\";\n\nconst Messages = () => {\n  const renderMessage = props => <ChatMessage {...props} key={props._id} />;\n  const messages = useFetch(\n    `${endpointBase}/api/latest_messages?chat_id=${chatId}&latest=7`\n  );\n  return <>{map(messages.reverse(), renderMessage)}</>;\n};\n\nconst WriteIntoChatButton = withModal(\"ask-question\")(({ toggle }) => {\n  return <Button onClick={toggle}>Написать в чат</Button>;\n});\n\nexport const ChatPreview = () => {\n  return (\n    <>\n      <h1>\n        <span role=\"img\" aria-label=\"чат\">\n          ✍🏻\n        </span>\n        Что внутри\n      </h1>\n      <Card>\n        <CardBody>\n          <Suspense fallback={\"...\"}>\n            <Messages />\n          </Suspense>\n          <div className=\"text-center\">\n            <WriteIntoChatButton />\n          </div>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n","/* global ym */\n\nimport React from \"react\";\nimport { Button } from \"reactstrap\";\n\nexport const GoToChat = () => {\n  const onClick = () => {\n    ym(46609578, \"reachGoal\", \"GOTO_CHAT\");\n  };\n\n  return (\n    <div className=\"text-center\">\n      <Button\n        color=\"primary\"\n        size=\"lg\"\n        tag=\"a\"\n        href=\"tg://resolve?domain=react_ru\"\n        onClick={onClick}\n      >\n        Перейти к сообществу\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { TopBar } from \"../components/TopBar\";\nimport { HeroUnit } from \"../components/HeroUnit\";\nimport { ChatRules } from \"../components/ChatRules\";\nimport { Moderation } from \"../components/Moderation\";\nimport { ChatPreview } from \"../components/ChatPreview\";\nimport { GoToChat } from \"../components/GoToChat\";\n\nconst MainSection = ({ show = true, children }) => {\n  if (show) {\n    return (\n      <Container style={{ marginBottom: \"2rem\", marginTop: \"2rem\" }}>\n        {children}\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst CatReviewBanner = () => {\n  return (\n    <a href=\"http://реакт-чат.рф/кот-Ревьюн/\">\n      <img\n        style={{ marginTop: \"2rem\" }}\n        width=\"240px\"\n        height=\"400px\"\n        src=\"https://vectr.com/tmp/caZ5Aqjx/biXy5hyjq.svg?width=240&height=400&select=biXy5hyjqpage0\"\n      />\n    </a>\n  );\n};\n\nexport const Main = () => {\n  return (\n    <div className=\"Main\">\n      <TopBar />\n      <HeroUnit />\n      <Row>\n        <Col xs={12} md={{ size: 6, offset: 2 }}>\n          <MainSection>\n            <ChatRules />\n          </MainSection>\n          <MainSection>\n            <Moderation />\n          </MainSection>\n          <MainSection>\n            <ChatPreview />\n          </MainSection>\n          <MainSection>\n            <GoToChat />\n          </MainSection>\n        </Col>\n        {/*\n        <Col xs={false} md={{ size: 2 }}>\n          <div className=\"text-center\">\n            <CatReviewBanner />\n          </div>\n        </Col>\n        */}\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport {\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\nimport { siteKey, secretKey } from \"../constants/recaptcha\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nexport const AskQuestion = reduxForm({\n  form: \"ask-question\"\n})(({ handleSubmit, onRecaptchaComplete, onRecaptchaExpire, disabled }) => {\n  return (\n    <Form id=\"ask-question\" name=\"ask-question\" onSubmit={handleSubmit}>\n      <p>Старайтесь формулировать вопрос максимально четко, ясно и просто.</p>\n      <FormGroup>\n        <Input\n          tag={Field}\n          component=\"textarea\"\n          name=\"text\"\n          placeholder=\"Задайте вопрос\"\n          rows=\"5\"\n          disabled={disabled}\n        />\n        <p>Поддерживается markdown разметка.</p>\n      </FormGroup>\n      <FormGroup>\n        <ReCAPTCHA\n          sitekey={siteKey}\n          size=\"normal\"\n          onChange={onRecaptchaComplete}\n          onExpire={onRecaptchaExpire}\n        />\n      </FormGroup>\n      {/*\n      <FormGroup>\n        <label htmlFor=\"screenshot\">Приложите скриншот кода</label>\n        <Input\n          tag={Field}\n          component=\"input\"\n          type=\"file\"\n          name=\"screenshot\"\n          accept=\".jpeg,.jpg,.png,.gif\"\n          disabled={disabled}\n        />\n      </FormGroup>\n      */}\n    </Form>\n  );\n});\n","export const siteKey = \"6Lf85YYUAAAAAFYLv2S8XJxOqDCK3MRJNytc8g82\";\n","/* global ym*/\n\nimport React, { useState } from \"react\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Alert\n} from \"reactstrap\";\nimport { withModal } from \"../HOCs/withModal\";\nimport { endpointBase } from \"../constants/endpointBase\";\nimport { chatId } from \"../constants/chatId\";\nimport axios from \"axios\";\nimport { AskQuestion as AskQuestionForm } from \"../forms/AskQuestion\";\n\nconst AskQuestionSuccess = ({ success }) => {\n  if (success) {\n    return (\n      <Alert color=\"success\">\n        Спасибо за обращение! Вступите в группу, чтобы получить ответ на вопрос.\n      </Alert>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst AskQuestionError = ({ error }) => {\n  if (error) {\n    return <Alert color=\"danger\">{error.stack}</Alert>;\n  } else {\n    return null;\n  }\n};\n\nconst SendButton = ({ disabled, toggle }) => {\n  return (\n    <Button form=\"ask-question\" color=\"primary\" disabled={disabled}>\n      Отправить\n    </Button>\n  );\n};\n\nconst JoinButton = ({ toggle, disabled }) => {\n  const onClick = () => {\n    ym(46609578, \"reachGoal\", \"GOTO_CHAT\");\n    toggle();\n  };\n\n  return (\n    <Button\n      tag=\"a\"\n      href=\"tg://resolve?domain=react_ru\"\n      color=\"success\"\n      disabled={disabled}\n      onClick={onClick}\n    >\n      Присоединиться\n    </Button>\n  );\n};\n\nexport const AskQuestion = withModal(\"ask-question\")(({ toggle, isOpen }) => {\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const [reCaptchaSuccess, setReCaptchaSuccess] = useState(false);\n\n  const onSubmit = async values => {\n    try {\n      setPending(true);\n      setError(null);\n      setSuccess(false);\n      const { data } = await axios.post(`${endpointBase}/api/ask_question`, {\n        chat_id: chatId,\n        ...values\n      });\n      setSuccess(data);\n    } catch (error) {\n      setError(error);\n    } finally {\n      setPending(false);\n    }\n  };\n\n  const onRecaptchaComplete = () => {\n    setReCaptchaSuccess(true);\n  };\n\n  const onRecaptchaExpire = () => {\n    setReCaptchaSuccess(false);\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle}>Задать вопрос в чат</ModalHeader>\n      <ModalBody>\n        <AskQuestionSuccess success={success} />\n        <AskQuestionError error={error} />\n        <AskQuestionForm\n          onSubmit={onSubmit}\n          disabled={pending}\n          onRecaptchaComplete={onRecaptchaComplete}\n          onRecaptchaExpire={onRecaptchaExpire}\n        />\n      </ModalBody>\n      <ModalFooter>\n        {success ? (\n          <JoinButton />\n        ) : (\n          <SendButton disabled={pending || !reCaptchaSuccess} />\n        )}\n      </ModalFooter>\n    </Modal>\n  );\n});\n","import React from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport {\n  Form,\n  FormGroup,\n  InputGroup,\n  InputGroupAddon,\n  Input\n} from \"reactstrap\";\n\nexport const Rehabilitation = reduxForm({\n  form: \"rehabilitation\"\n})(({ handleSubmit, disabled }) => {\n  return (\n    <Form id=\"rehabilitation\" onSubmit={handleSubmit}>\n      <FormGroup>\n        <label htmlFor=\"username\">Ваш ID в telegram</label>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n          <Input\n            tag={Field}\n            component=\"input\"\n            name=\"username\"\n            placeholder=\"ychebotaev\"\n            disabled={disabled}\n          />\n        </InputGroup>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"email\">Адрес электронной почты</label>\n        <Input\n          tag={Field}\n          component=\"input\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"yury.79120345101@gmail.com\"\n          disabled={disabled}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Input\n          tag={Field}\n          component={\"textarea\"}\n          name=\"text\"\n          placeholder=\"Опишите, что произошло\"\n          disabled={disabled}\n        />\n      </FormGroup>\n    </Form>\n  );\n});\n","import React, { useState } from \"react\";\nimport {\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button\n} from \"reactstrap\";\nimport { withModal } from \"../HOCs/withModal\";\nimport { endpointBase } from \"../constants/endpointBase\";\nimport { chatId } from \"../constants/chatId\";\nimport axios from \"axios\";\nimport { Rehabilitation as RehabilitationForm } from \"../forms/Rehabilitation\";\n\nconst RehabilitationError = ({ error }) => {\n  if (error) {\n    return <Alert color=\"danger\">{error.stack}</Alert>;\n  } else {\n    return null;\n  }\n};\n\nconst RehabilitationSuccess = ({ success, success: { email } }) => {\n  if (success) {\n    return (\n      <Alert color=\"success\">\n        Спасибо за обращение! Мы пришлем ответ на <b>{email}</b>, ожидайте.\n      </Alert>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst SendButton = ({ pending }) => {\n  return (\n    <Button\n      form=\"rehabilitation\"\n      color=\"primary\"\n      type=\"submit\"\n      disabled={pending}\n    >\n      Отправить\n    </Button>\n  );\n};\n\nconst CloseButton = ({ pending, toggle }) => {\n  return (\n    <Button color=\"primary\" type=\"button\" disabled={pending} onClick={toggle}>\n      Закрыть\n    </Button>\n  );\n};\n\nexport const Rehabilitation = withModal(\"rehabiltiation\")(\n  ({ isOpen, toggle }) => {\n    const [pending, togglePending] = useState(false);\n    const [error, setError] = useState(null);\n    const [success, setSuccess] = useState(false);\n\n    const onSubmit = async values => {\n      try {\n        togglePending(true);\n        setError(null);\n        setSuccess(false);\n        const { data } = await axios.post(\n          `${endpointBase}/api/rehabilitation`,\n          {\n            chat_id: chatId,\n            ...values\n          }\n        );\n        // toggle();\n        setSuccess(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        togglePending(false);\n      }\n    };\n\n    return (\n      <Modal isOpen={isOpen} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Реабилитация в чате</ModalHeader>\n        <ModalBody>\n          <RehabilitationError error={error} />\n          <RehabilitationSuccess success={success} />\n          <RehabilitationForm onSubmit={onSubmit} disabled={pending} />\n        </ModalBody>\n        <ModalFooter>\n          {success ? (\n            <CloseButton toggle={toggle} pending={pending} />\n          ) : (\n            <SendButton pending={pending} />\n          )}\n        </ModalFooter>\n      </Modal>\n    );\n  }\n);\n","import { reducer as formReducer } from \"redux-form\";\n\nexport default formReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { App } from \"./components/App\";\nimport { AskQuestion } from \"./modals/AskQuestion\";\nimport { Rehabilitation } from \"./modals/Rehabilitation\";\nimport { createStore } from \"../src/redux/createStore\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst store = createStore();\nconst app = (\n  <>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n      <AskQuestion />\n      <Rehabilitation />\n    </Provider>\n  </>\n);\nReactDOM.render(app, rootElement);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { Main } from \"../pages/Main\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n      </Switch>\n    </div>\n  );\n};\n"],"sourceRoot":""}